name: Validate, Export and Deploy ARM Template and ADF pre / post deployment scripts

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install npm packages
      run: npm install
      working-directory: ${{github.workspace}}/build # replace with the package.json folder

    - name: Validate Data Factory resources
      run: npm run build validate ${{github.workspace}} /subscriptions/f7f944ef-b5d6-434f-9433-7c1ff3e75fac/resourceGroups/myrg/providers/Microsoft.DataFactory/factories/myadf
      working-directory: ${{github.workspace}}/build # replace with the package.json folder

    - name: Validate and Generate ARM template
      run: npm run build export ${{github.workspace}} /subscriptions/f7f944ef-b5d6-434f-9433-7c1ff3e75fac/resourceGroups/myrg/providers/Microsoft.DataFactory/factories/myadf "ArmTemplate"
      # For using preview that allows you to only stop/start triggers that are modified, uncomment the below line and make sure the package.json contains the build-preview command.
      # run: npm run build-preview export ./<Root-folder-from-Git-configuration-settings-in-ADF> /subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/GartnerMQ2021/providers/Microsoft.DataFactory/factories/Dev-GartnerMQ2021-DataFactory "ArmTemplate"
      working-directory: ${{github.workspace}}/build # replace with the package.json folder

    - name: Upload ARM template artifact
      uses: actions/upload-artifact@v4
      with:
        name: ArmTemplates
        path: ${{github.workspace}}/build/ArmTemplate # replace with generated ARM template folder

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:

        
 # we 1st download the previously uploaded artifact so we can leverage it later in the release job     
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ArmTemplates # (5) Artifact name 


 # Display the structure of the downloaded files for debugging purposes
 #     - name: Display structure of downloaded files
 #       run: ls -R

      - name: Login via Az module
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true       


      - name: Run Pre-deployment PowerShell Script File
        uses: azure/powershell@v2
        with:
         inlineScript: |
          ./PrePostDeploymentScript.ps1 `
          -armTemplate ${{github.workspace}}/ARMTemplateForFactory.json `
          -ArmTemplateParameters ${{github.workspace}}/ARMTemplateParametersForFactory.json `
          -ResourceGroupName '<replace with target resource group for deployment>' `
          -DataFactoryName '<replace with target data factory name>'`
          -predeployment $true `
          -deleteDeployment $false
         azPSVersion: "latest"
         

      - name: Run ARM deploy
        uses: azure/arm-deploy@v2
        with:
            resourceGroupName: '<replace with target resource group for deployment>'  
            template: 'ARMTemplateForFactory.json' 
            parameters: ARMTemplateParametersForFactory.json factoryName=<replace with target data factory name>  #add additional overide parameters if needed here ''

            
      - name: Run Post-deployment PowerShell Script File
        uses: azure/powershell@v2
        with:
         inlineScript: |
          ./PrePostDeploymentScript.ps1 `
          -armTemplate ${{github.workspace}}/ARMTemplateForFactory.json ` 
          -ArmTemplateParameters ${{github.workspace}}/ARMTemplateParametersForFactory.json `
          -ResourceGroupName '<replace with target resource group for deployment>' `
          -DataFactoryName '<replace with target data factory name>'`
          -predeployment $false `
          -deleteDeployment $true
         azPSVersion: "latest"
        

